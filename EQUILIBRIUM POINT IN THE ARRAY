//{ Driver Code Starts
#include <iostream>
using namespace std;


// } Driver Code Ends
class Solution{
    public:
    // Function to find equilibrium point in the array.
    // a: input array
    // n: size of array
    int equilibriumPoint(long long a[], int n) {
    
        // Your code here
          int start=0;
           int end=n;
           int mid=start+(end-start)/2;
            while(start<=end){
           int sum1=0;
           int sum2=0;
           for(int i=0;i<mid;i++){
                
               sum1+=a[i];
           }
           for(int i=mid+1;i<n;i++){
               sum2+=a[i];
           }
           if(sum1==sum2){
               return mid+1;
               break;
           }
           else if(sum1>sum2){
               end=mid-1;
           }
           else{
               start=mid+1;
           }
           mid=start+(end-start)/2;
           
       }   
       return -1;
    }

};

//{ Driver Code Starts.


int main() {

    long long t;
    
    //taking testcases
    cin >> t;

    while (t--) {
        long long n;
        
        //taking input n
        cin >> n;
        long long a[n];

        //adding elements to the array
        for (long long i = 0; i < n; i++) {
            cin >> a[i];
        }
        
        Solution ob;

        //calling equilibriumPoint() function
        cout << ob.equilibriumPoint(a, n) << endl;
    }
    return 0;
}

// } Driver Code Ends
